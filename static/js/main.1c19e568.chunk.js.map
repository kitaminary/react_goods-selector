{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","currentGoods","clear","setState","checkGoods","includeGood","includes","selectAndRemove","good","newGood","splice","indexOf","push","printGoods","lastElem","slice","length","join","this","className","type","onClick","classNames","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,MAAQ,WACN,EAAKC,SAAS,CAAEF,aAAc,M,EAGhCG,WAAa,SAACC,GACZ,OAAO,EAAKL,MAAMC,aAAaK,SAASD,I,EAG1CE,gBAAkB,SAACC,GAEjB,IAAMC,EAAO,YAAO,EAAKT,MAAMC,cAQ/B,OANIQ,EAAQH,SAASE,GACnBC,EAAQC,OAAOD,EAAQE,QAAQH,GAAO,GAEtCC,EAAQG,KAAKJ,GAGR,EAAKL,SAAS,CAAEF,aAAcQ,K,EAGvCI,WAAa,WACX,IAAMJ,EAAO,YAAO,EAAKT,MAAMC,cACzBa,EAAWL,EAAQM,OAAO,EAAGN,EAAQO,QAE3C,OAAIP,EAAQO,OAAS,EACb,GAAN,OAAUP,EAAQM,MAAM,EAAGN,EAAQO,OAAS,GAAGC,KAAK,MAApD,gBAAiEH,EAAjE,kBAGI,GAAN,OAAUL,EAAV,kB,4CAGF,WAAU,IAAD,OACCR,EAAiBiB,KAAKlB,MAAtBC,aAER,OACE,sBAAKkB,UAAU,yBAAf,UACE,wBACEC,KAAK,SACLC,QAASH,KAAKhB,MACdiB,UAAWG,IAAW,gCAAiC,CACrD,eAAwC,IAAxBrB,EAAae,SAJjC,mBASA,oBAAIG,UAAU,cAAd,6BACA,oBAAIA,UAAU,iBAAd,SAC2B,IAAxBlB,EAAae,OACZ,yDAGE,mCAAGE,KAAKL,iBAEd,oBAAIM,UAAU,aAAd,SAEIrB,EAAgByB,KAAI,SAAAf,GAAI,OACtB,mCACE,qBAAeW,UAAU,aAAzB,UACGX,EACD,wBACEY,KAAK,SACLC,QAAS,WACP,EAAKd,gBAAgBC,IAEvBW,UAAWG,IACT,EAAKlB,WAAWI,GACd,8BACE,gCARR,SAWG,EAAKJ,WAAWI,GACf,8CACE,kDAfCA,iB,GA/DPgB,IAAMC,WA0FT1B,IC5Gf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1c19e568.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  currentGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    currentGoods: ['Jam'],\n  };\n\n  clear = () => {\n    this.setState({ currentGoods: [] });\n  };\n\n  checkGoods = (includeGood: string) => {\n    return this.state.currentGoods.includes(includeGood);\n  };\n\n  selectAndRemove = (good: string) => {\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    const newGood = [...this.state.currentGoods];\n\n    if (newGood.includes(good)) {\n      newGood.splice(newGood.indexOf(good), 1);\n    } else {\n      newGood.push(good);\n    }\n\n    return this.setState({ currentGoods: newGood });\n  };\n\n  printGoods = () => {\n    const newGood = [...this.state.currentGoods];\n    const lastElem = newGood.slice(-1, newGood.length);\n\n    if (newGood.length > 1) {\n      return `${newGood.slice(0, newGood.length - 1).join(', ')} and ${lastElem} are selected.`;\n    }\n\n    return `${newGood} is selected.`;\n  };\n\n  render() {\n    const { currentGoods } = this.state;\n\n    return (\n      <div className=\"good content is-medium\">\n        <button\n          type=\"button\"\n          onClick={this.clear}\n          className={classNames('goood__clear button is-danger', {\n            'is-invisible': currentGoods.length === 0,\n          })}\n        >\n          Clear\n        </button>\n        <h1 className=\"good__title\">Selected good: </h1>\n        <h2 className=\"good__subtitle\">\n          {currentGoods.length === 0 ? (\n            <>\n              No goods selected\n            </>\n          ) : <>{this.printGoods()}</>}\n        </h2>\n        <ul className=\"good__list\">\n          {\n            goodsFromServer.map(good => (\n              <>\n                <li key={good} className=\"good__item\">\n                  {good}\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      this.selectAndRemove(good);\n                    }}\n                    className={classNames(\n                      this.checkGoods(good) ? (\n                        'button is-danger is-rounded'\n                      ) : 'button is-primary is-rounded',\n                    )}\n                  >\n                    {this.checkGoods(good) ? (\n                      <>Remove</>\n                    ) : <>Select</>}\n                  </button>\n                </li>\n              </>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}